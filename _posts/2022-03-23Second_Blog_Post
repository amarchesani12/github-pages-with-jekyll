---
title: "Factors leading to Luis Severino’s Dominance in the 2018 MLB Season"
date: 2022-03-23
---

The purpose of this analysis is to determine which variables had the biggest impact on New York Yankees pitcher Luis Severino’s slider. The binary variable defined was named ‘type’ which consisted of either 1: called strike, swinging strike, or ball in play. A 0 meant that the pitch was called a ball. The statistical methods used in this analysis were logistic regression models fitting twenty-three total predictors and reducing the model down to seven significant predictors. I also used multiple decision trees with the full model and two different types of reduced models. Lastly, I concluded the research by creating a random forest. I used both the logistic regression models, decision trees, and random forest to predict the odds of Severino throwing his slider for a strike. I used training data and testing data, with percentages of 75 and 25, respectively. I found out that the most significant factors are velocity in the x and z directions when the ball is 10 feet from the batter, and the distance from the ground to the top of the strike zone.
Analytics in baseball is growing more and more with each day. First started by the Oakland Athletics in the 2002 MLB season, and later made into the movie Moneyball, using data to make decisions on trades, plater development, and scouting continues to be a vital part of each Major League’s team’s success. I personally have been interested in baseball statistics ever since I injured my arm playing at Kirkwood Community College. After my injury, I kept stats for our team and my love for analytics grew. One of the companies I dream of working for when I am older is Driveline Baseball. They are a company that helps develop pitchers using unique and industry-leading techniques, and I have been following them for a long time. They do a lot of work with pitch design and pitch movement, so I knew I wanted to take my turn and see what I could find out by doing my own research.
My goals for this research was to first and foremost determine the variables that are significant and/or important in deciding whether a slider from Severino would be a strike. Before I ran any of the tests, I predicted that the spin rate would be a significant factor because from my baseball knowledge, the more spin a ball has, the more it will move due to the magnus effect. Another goal of mine was to deal with a larger dataset that had lots of variables in it. My previous project on baseball was a smaller set with only a few variables, but this time I wanted to challenge myself and see if I could handle a more complex collection of data.
The data set we used for this analysis came from Baseball Savant. Baseball Savant is a website that collects advanced data from every pitch of every MLB game since the 1999 season. For our data set, we took all sliders Severino threw during the 2018 MLB season. Some entries had N/As in them, so after those rows were deleted, I was left with 980 total observations, so 980 total pitches thrown. Baseball Savant website has over 90 variables to choose from that can be filtered to whatever you are looking for. In my case, I filtered variables that seemed repetitive to me and ones that weren’t relevant and ended up with 23 total predictors in my dataset. The binary variable I created was called ‘type’. It consisted of either a 1 for pitches that were called strikes, pitches that were swung at and missed, and pitches that were swung at and hit into play. The 0-value consisted of every other outcome, which was only if the pitch was called a ball by the umpire. 
After I reduced my logistic regression model, I ended up with eight significant predictors. Release speed is measured in miles per hour and it is defined as the pitch velocity at the point of release from the pitcher’s hand. Stand was defined as whether the batter hit left handed or right handed. Balls was the number of balls before the pitch was thrown. ‘Vx0’ was the velocity of the pitch measured in feet per second in the x-dimension at 50 feet. In other words, it was the velocity of the horizontal break of the ball. ‘Vy0’ was the velocity of the pitch measured in feet per second in the y-dimension at 50 feet, and ‘Vz0’ was the velocity of the pitch measured in feet per second in the z-dimension at 50 feet. Top of strike zone was the top of the batter’s strike zone measured in feet above home plate. Lastly, release spin was the spin rate of the pitch tracked by Statcast.
The first thing I did was fit a full logistic regression model using all 23 predictors and the training data. When I ran that, it came back that the significant predictors were release speed, stand of the batter, number of balls, velocity in the y-direction, and top of the strike zone. Release spin rate was significant at a 10% level, so I decided to keep it in for my reduced model. I used the testing data to run predictions and see how my full model performed before fitting any reduced model. It came out that the accuracy rate was approximately 70% which was better than I expected, but still not as high as I would have liked. 
I then constructed a classical decision tree with all the predictors included. The picture that R produced was very complicated and messy, so I pruned it down using the highest xerror value within one standard deviation of the lowest total xerror. The pruned tree was a little bit better, but still very complicated. I ran the testing set through to see if the pruned tree would predict any better than the full logistic regression model. The result was a little over 77% so I was very happy with that. However, when looking back at the pruned tree, I noticed the first two variables listed were ‘plate_x’ and ‘plate_z’. I was not familiar with those, so I looked them up, and they were essentially the location of the ball when it crossed home plate relative to the center of the plate. In other words, it was the definition of a strike because if the ball crosses over the plate, it is a strike. I wanted to make sure I addressed this problem after reducing my model.
I then proceeded to fit a reduced logistic regression model using only the predictors that were significant in the full model. When running the reduced model, the release spin rate did become significant at a 5% level, making all of them now significant at that level. As with the full model, I used the testing data to see if this reduced model could predict whether a pitch would be a strike any better. It resulted in a 66% accuracy rate, so a little bit worse than the full model. I wanted to try and create an even better logistic model if I could. Again, I created a decision tree with only the significant predictors from the reduced model and got a very simple tree with the only two branch variables being top of the strike zone and release spin rate. I figured since this was a very simple model it would not perform very well. I ran predictions and my guess was right, with this tree yielding a 59% success rate.
I went back to my full model and looked at the ‘plate_x’ and ‘plate_z’ variables and figured even though they weren’t significant in my full model, they were important in my decision tree because they were almost the definition of what a strike is. I fit one final logistic model using all predictors except the ‘plate_x’ and ‘plate_z’ variables. The results were a little bit surprising to me because all six predictors from the first model stayed significant, and the only other predictor that turned significant after was the velocity in the x-direction at 50 feet. I again ran the testing set through the model to see how it would perform, and it had the exact same accuracy rate as the first full model I did. At first I was surprised with this, but the more I thought about it, the more it made sense. The place where taking out the plate variables would matter the most would be the decision tree since those variables were most important in the first tree I grew.
I grew the tree using all the predictors again, without the plate variables, and got a much nicer tree to read. There were only two predictors in the tree, but after thinking about why that could be, it made a lot of sense to me. The two predictors were velocity in the z-direction and velocity in the x-direction. I concluded that this was the case because the more the pitch moves as it gets closer to the batter, the better chance it has to be a strike. This is easy to visualize. If a ball were coming at you straight, it would be easier to hit than a ball coming at you that is moving a lot in the last 10 feet before it reaches you. I hoped that this tree would perform well when I ran the testing set through it, and to my appease, it was accurate at about a 75% clip.
The last statistical analysis I wanted to do was fit the data into a random forest. I figured this would give me the most accurate model, since there will be less variance involved. I had some trouble getting my script to work, so I had to use the rattle() function in the console. After I used the data without the pitch location at the plate, I fit the forest with again a 75% training data, and 25% testing data. As I suspected, this was the most accurate with an accuracy rate of 78%. I was a little surprised however that the number was not a lot higher than some of my other models. I checked the Gini Index values for all the predictors in the random forest, and velocity in the x-direction and velocity in the y-direction were far and above the other ones (40.75 and 38.55). I was surprised to see that the only other predictor in double digits was the height of the top of the strike zone. 
The last thing I did was compare all the accuracies side by side to see which was the best for me to use. At 78% accuracy, the random forest had the highest accuracy percentage, but the full model decision tree, and the decision tree without the pitch locations were not far behind at 77% and 75% respectively. If I was picking a model to use for myself, I would pick the random forest because it was most accurate. However, because of the simplicity and the visual aspect of the decision tree, I would use the decision tree without pitch location data for explanation to other people. 
In conclusion, my original prediction of spin rate being very important was not right at all. I am hoping to dive into that area a little bit more and try to explain why some pitches move more than others even though they have a lower spin rate. As mentioned before, the most important factor that caused Severino’s throw to result in a strike is how much movement the ball had later in its path. The last thing I wanted to point out and surprised me was that the top of the strike zone was a significant factor and an important one in the random forest. The more I thought about this the more it made sense because the higher the top of the strike zone is, the taller the batter is because the strike zone is a defined box starting at the batter’s midsection and running down to his knees. A taller batter would result in a bigger strike zone, thus making it a bigger target to deliver to. 
